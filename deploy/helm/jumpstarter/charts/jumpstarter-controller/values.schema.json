{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$defs": {
    "port": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "labels": {
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "ClusterIP": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "const": "ClusterIP"
        }
      }
    },
    "NodePort": {
      "type": "object",
      "required": [
        "type",
        "nodePort"
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "const": "NodePort"
        },
        "nodePort": {
          "$ref": "#/$defs/port"
        }
      }
    },
    "service": {
      "anyOf": [
        {
          "$ref": "#/$defs/ClusterIP"
        },
        {
          "$ref": "#/$defs/NodePort"
        }
      ]
    },
    "ingress": {
      "enabled": {
        "type": "boolean",
        "description": "Whether to enable Ingress for the gRPC endpoint"
      },
      "class": {
        "type": "string",
        "description": "IngressClass to use for the gRPC endpoint"
      }
    },
    "route": {
      "enabled": {
        "type": "boolean",
        "description": "Whether to enable OpenShift Router for the gRPC endpoint"
      }
    },
    "router": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Hostname for the gRPC router endpoint selfsigned certificates"
        },
        "endpoint": {
          "type": "string",
          "description": "Endpoint to advertise for the gRPC router endpoint"
        },
        "ingress": {
          "$ref": "#/$defs/ingress"
        },
        "route": {
          "$ref": "#/$defs/route"
        },
        "service": {
          "$ref": "#/$defs/service"
        },
        "labels": {
          "$ref": "#/$defs/labels"
        }
      }
    }
  },
  "required": [
    "image",
    "imagePullPolicy"
  ],
  "additionalProperties": false,
  "properties": {
    "enabled": {
      "type": "boolean",
      "description": "Whether to enable jumpstarter controller"
    },
    "config": {
      "type": "object"
    },
    "namespace": {
      "type": "string"
    },
    "image": {
      "type": "string",
      "description": "Image for the controller"
    },
    "tag": {
      "type": "string",
      "description": "Image tag for the controller"
    },
    "imagePullPolicy": {
      "type": "string",
      "description": "Image pull policy for the controller"
    },
    "global": {
      "type": "object",
      "description": "Global parameters",
      "additionalProperties": true,
      "properties": {
        "baseDomain": {
          "type": "string",
          "description": "Base domain to construct the FQDN for the service endpoints"
        },
        "metrics": {
          "types": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "grpc": {
      "additionalProperties": false,
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Hostname for the gRPC controller endpoint selfsigned certificates"
        },
        "endpoint": {
          "type": "string",
          "description": "Endpoint to advertise for the gRPC controller endpoint"
        },
        "ingress": {
          "$ref": "#/$defs/ingress"
        },
        "route": {
          "$ref": "#/$defs/route"
        },
        "service": {
          "$ref": "#/$defs/service"
        },
        "tls": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "secret": {
              "type": "string"
            },
            "controllerCertSecret": {
              "type": "string",
              "description": "Secret containing the TLS certificate/key for the gRPC controller endpoint"
            },
            "routerCertSecret": {
              "type": "string",
              "description": "Secret containing the TLS certificate/key for the gRPC router endpoints"
            },
            "port": {
              "$ref": "#/$defs/port"
            },
            "mode": {
              "type": "string",
              "enum": [
                "passthrough",
                "reencrypt"
              ]
            }
          }
        },
        "routers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/router"
          }
        }
      }
    }
  }
}
