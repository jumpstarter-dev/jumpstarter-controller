// Copyright 2024 The Jumpstarter Authors

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: jumpstarter/v1/common.proto

package jumpstarterv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Exporter status information
type ExporterStatus int32

const (
	ExporterStatus_EXPORTER_STATUS_UNSPECIFIED              ExporterStatus = 0 // Unspecified exporter status
	ExporterStatus_EXPORTER_STATUS_OFFLINE                  ExporterStatus = 1 // Exporter is offline
	ExporterStatus_EXPORTER_STATUS_AVAILABLE                ExporterStatus = 2 // Exporter is available to be leased
	ExporterStatus_EXPORTER_STATUS_BEFORE_LEASE_HOOK        ExporterStatus = 3 // Exporter is executing before lease hook(s)
	ExporterStatus_EXPORTER_STATUS_LEASE_READY              ExporterStatus = 4 // Exporter is leased and ready to accept commands
	ExporterStatus_EXPORTER_STATUS_AFTER_LEASE_HOOK         ExporterStatus = 5 // Exporter is executing after lease hook(s)
	ExporterStatus_EXPORTER_STATUS_BEFORE_LEASE_HOOK_FAILED ExporterStatus = 6 // Exporter before lease hook failed
	ExporterStatus_EXPORTER_STATUS_AFTER_LEASE_HOOK_FAILED  ExporterStatus = 7 // Exporter after lease hook failed
)

// Enum value maps for ExporterStatus.
var (
	ExporterStatus_name = map[int32]string{
		0: "EXPORTER_STATUS_UNSPECIFIED",
		1: "EXPORTER_STATUS_OFFLINE",
		2: "EXPORTER_STATUS_AVAILABLE",
		3: "EXPORTER_STATUS_BEFORE_LEASE_HOOK",
		4: "EXPORTER_STATUS_LEASE_READY",
		5: "EXPORTER_STATUS_AFTER_LEASE_HOOK",
		6: "EXPORTER_STATUS_BEFORE_LEASE_HOOK_FAILED",
		7: "EXPORTER_STATUS_AFTER_LEASE_HOOK_FAILED",
	}
	ExporterStatus_value = map[string]int32{
		"EXPORTER_STATUS_UNSPECIFIED":              0,
		"EXPORTER_STATUS_OFFLINE":                  1,
		"EXPORTER_STATUS_AVAILABLE":                2,
		"EXPORTER_STATUS_BEFORE_LEASE_HOOK":        3,
		"EXPORTER_STATUS_LEASE_READY":              4,
		"EXPORTER_STATUS_AFTER_LEASE_HOOK":         5,
		"EXPORTER_STATUS_BEFORE_LEASE_HOOK_FAILED": 6,
		"EXPORTER_STATUS_AFTER_LEASE_HOOK_FAILED":  7,
	}
)

func (x ExporterStatus) Enum() *ExporterStatus {
	p := new(ExporterStatus)
	*p = x
	return p
}

func (x ExporterStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExporterStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_jumpstarter_v1_common_proto_enumTypes[0].Descriptor()
}

func (ExporterStatus) Type() protoreflect.EnumType {
	return &file_jumpstarter_v1_common_proto_enumTypes[0]
}

func (x ExporterStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExporterStatus.Descriptor instead.
func (ExporterStatus) EnumDescriptor() ([]byte, []int) {
	return file_jumpstarter_v1_common_proto_rawDescGZIP(), []int{0}
}

// Source of log stream messages
type LogSource int32

const (
	LogSource_LOG_SOURCE_UNSPECIFIED       LogSource = 0 // Unspecified log source
	LogSource_LOG_SOURCE_DRIVER            LogSource = 1 // Driver/device logs
	LogSource_LOG_SOURCE_BEFORE_LEASE_HOOK LogSource = 2 // beforeLease hook execution logs
	LogSource_LOG_SOURCE_AFTER_LEASE_HOOK  LogSource = 3 // afterLease hook execution logs
	LogSource_LOG_SOURCE_SYSTEM            LogSource = 4 // System/exporter logs
)

// Enum value maps for LogSource.
var (
	LogSource_name = map[int32]string{
		0: "LOG_SOURCE_UNSPECIFIED",
		1: "LOG_SOURCE_DRIVER",
		2: "LOG_SOURCE_BEFORE_LEASE_HOOK",
		3: "LOG_SOURCE_AFTER_LEASE_HOOK",
		4: "LOG_SOURCE_SYSTEM",
	}
	LogSource_value = map[string]int32{
		"LOG_SOURCE_UNSPECIFIED":       0,
		"LOG_SOURCE_DRIVER":            1,
		"LOG_SOURCE_BEFORE_LEASE_HOOK": 2,
		"LOG_SOURCE_AFTER_LEASE_HOOK":  3,
		"LOG_SOURCE_SYSTEM":            4,
	}
)

func (x LogSource) Enum() *LogSource {
	p := new(LogSource)
	*p = x
	return p
}

func (x LogSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSource) Descriptor() protoreflect.EnumDescriptor {
	return file_jumpstarter_v1_common_proto_enumTypes[1].Descriptor()
}

func (LogSource) Type() protoreflect.EnumType {
	return &file_jumpstarter_v1_common_proto_enumTypes[1]
}

func (x LogSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogSource.Descriptor instead.
func (LogSource) EnumDescriptor() ([]byte, []int) {
	return file_jumpstarter_v1_common_proto_rawDescGZIP(), []int{1}
}

var File_jumpstarter_v1_common_proto protoreflect.FileDescriptor

const file_jumpstarter_v1_common_proto_rawDesc = "" +
	"\n" +
	"\x1bjumpstarter/v1/common.proto\x12\x0ejumpstarter.v1*\xb6\x02\n" +
	"\x0eExporterStatus\x12\x1f\n" +
	"\x1bEXPORTER_STATUS_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17EXPORTER_STATUS_OFFLINE\x10\x01\x12\x1d\n" +
	"\x19EXPORTER_STATUS_AVAILABLE\x10\x02\x12%\n" +
	"!EXPORTER_STATUS_BEFORE_LEASE_HOOK\x10\x03\x12\x1f\n" +
	"\x1bEXPORTER_STATUS_LEASE_READY\x10\x04\x12$\n" +
	" EXPORTER_STATUS_AFTER_LEASE_HOOK\x10\x05\x12,\n" +
	"(EXPORTER_STATUS_BEFORE_LEASE_HOOK_FAILED\x10\x06\x12+\n" +
	"'EXPORTER_STATUS_AFTER_LEASE_HOOK_FAILED\x10\a*\x98\x01\n" +
	"\tLogSource\x12\x1a\n" +
	"\x16LOG_SOURCE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11LOG_SOURCE_DRIVER\x10\x01\x12 \n" +
	"\x1cLOG_SOURCE_BEFORE_LEASE_HOOK\x10\x02\x12\x1f\n" +
	"\x1bLOG_SOURCE_AFTER_LEASE_HOOK\x10\x03\x12\x15\n" +
	"\x11LOG_SOURCE_SYSTEM\x10\x04B\xca\x01\n" +
	"\x12com.jumpstarter.v1B\vCommonProtoP\x01ZNgithub.com/jumpstarter-dev/jumpstarter-controller/jumpstarter/v1;jumpstarterv1\xa2\x02\x03JXX\xaa\x02\x0eJumpstarter.V1\xca\x02\x0eJumpstarter\\V1\xe2\x02\x1aJumpstarter\\V1\\GPBMetadata\xea\x02\x0fJumpstarter::V1b\x06proto3"

var (
	file_jumpstarter_v1_common_proto_rawDescOnce sync.Once
	file_jumpstarter_v1_common_proto_rawDescData []byte
)

func file_jumpstarter_v1_common_proto_rawDescGZIP() []byte {
	file_jumpstarter_v1_common_proto_rawDescOnce.Do(func() {
		file_jumpstarter_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jumpstarter_v1_common_proto_rawDesc), len(file_jumpstarter_v1_common_proto_rawDesc)))
	})
	return file_jumpstarter_v1_common_proto_rawDescData
}

var file_jumpstarter_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_jumpstarter_v1_common_proto_goTypes = []any{
	(ExporterStatus)(0), // 0: jumpstarter.v1.ExporterStatus
	(LogSource)(0),      // 1: jumpstarter.v1.LogSource
}
var file_jumpstarter_v1_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_jumpstarter_v1_common_proto_init() }
func file_jumpstarter_v1_common_proto_init() {
	if File_jumpstarter_v1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jumpstarter_v1_common_proto_rawDesc), len(file_jumpstarter_v1_common_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jumpstarter_v1_common_proto_goTypes,
		DependencyIndexes: file_jumpstarter_v1_common_proto_depIdxs,
		EnumInfos:         file_jumpstarter_v1_common_proto_enumTypes,
	}.Build()
	File_jumpstarter_v1_common_proto = out.File
	file_jumpstarter_v1_common_proto_goTypes = nil
	file_jumpstarter_v1_common_proto_depIdxs = nil
}
